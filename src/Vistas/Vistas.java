/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Clases.BubbleSort;
import Clases.Generar;
import Clases.MergeSort;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Image;
import java.awt.Panel;
import java.awt.Toolkit;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import static java.lang.Thread.sleep;
import java.math.BigInteger;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import jxl.write.WriteException;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Jaime Sierra
 */
public class Vistas extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Vistas() {
        initComponents();
        tabla();
        jButton4.setEnabled(false);
        jTextField1.setEditable(false);
        jButton1.setEnabled(false);
        jButton5.setEnabled(false);
        jButton3.setEnabled(false);

        /**
         * Image icon =
         * Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Imagenes/jaime-page-001.jpg"));
         * this.setIconImage(icon); Background ImageIcon imagen1 = new
         * ImageIcon(getClass().getResource("/Images/jaime-page-001.jpg")); Icon
         * fondo1 = new
         * ImageIcon(imagen1.getImage().getScaledInstance(jLabel2.getWidth(),
         * jLabel2.getHeight(), Image.SCALE_DEFAULT)); jLabel2.setIcon(fondo1);
         *
         * Boton1 ImageIcon imagen2 = new
         * ImageIcon(getClass().getResource("/Images/boton1.png")); Icon fondo2
         * = new
         * ImageIcon(imagen2.getImage().getScaledInstance(jButton2.getWidth(),
         * jButton2.getHeight(), Image.SCALE_DEFAULT));
         * jButton2.setIcon(fondo2);
         *
         */
    }
    long startTimeBS, endTimeBS, timeBS, startTimeMS, endTimeMS, timeMS;

    public static Generar generarExcel = new Generar();

    static String[][] mat = new String[32][8];

    void tabla() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Número de claves");
        modelo.addColumn("Tamaño de las claves");
        modelo.addColumn("Promedio de Instrucciones BS");
        modelo.addColumn("Promedio de Instrucciones MS");
        modelo.addColumn("Promedio de Tiempo BS");
        modelo.addColumn("Promedio de Tiempo MS");
        jTable1.setModel(modelo);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1320, 700));
        setPreferredSize(new java.awt.Dimension(1320, 700));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setText("GENERAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, 130, 30));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Número de claves", "Tamaño de las claves", "Promedio de Instrucciones BS", "Promedio de Instrucciones MS", "Promedio de Tiempo BS", "Promedio de Tiempo MS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 1230, 500));

        jButton3.setText("MOSTRAR ARCHIVO EXCEL");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 50, 210, 30));

        jButton4.setText("MOSTRAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 50, 190, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("0 / 3 completados.");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 0, 190, 40));

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 10, 60, 30));

        jButton1.setText("GRAFICO TIEMPO BS");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 20, 160, 30));

        jButton5.setText("GRAFICO TIEMPO MS");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 60, 160, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static BigInteger randomBig(int digitosDecimales) {
        Random numeroRandom = new Random();
        BigInteger bi = BigInteger.ZERO;
        for (int i = 0; i < digitosDecimales; i++) {
            int ir = i == 0 ? numeroRandom.nextInt(9) + 1 : numeroRandom.nextInt(10);
            bi = bi.multiply(BigInteger.TEN).add(BigInteger.valueOf(ir));
        }

        return bi;

    }


    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        try {

            int cont = 0;
            BubbleSort bu = new BubbleSort();
            MergeSort me = new MergeSort();

            //Modelo
            DefaultTableModel modelo = new DefaultTableModel();
            modelo.addColumn("Conjunto de datos");
            modelo.addColumn("Número de claves");
            modelo.addColumn("Tamaño de las claves");
            modelo.addColumn("Promedio de Instrucciones BS");
            modelo.addColumn("Promedio de Instrucciones MS");
            modelo.addColumn("Promedio de Tiempo BS");
            modelo.addColumn("Promedio de Tiempo MS");

            long[] promedios = new long[4];
            for (int w = 300; w < 9200; w += 300) {
                cont++;

                for (int z = 0; z < 3; z++) {
                    jLabel1.setText((z + 1) + " / 3 completados. ");
                    BigInteger vec2[] = new BigInteger[w];
                    BigInteger vec3[] = new BigInteger[vec2.length];

                    for (int i = 0; i < vec2.length; i++) {
                        vec2[i] = vec3[i] = randomBig(1000);
                    }

                    startTimeBS = System.nanoTime();
                    bu.recursiveBubble(vec3);
                    endTimeBS = System.nanoTime();
                    timeBS = endTimeBS - startTimeBS;

                    startTimeMS = System.nanoTime();
                    me.sort(vec2, 0, vec2.length - 1);
                    endTimeMS = System.nanoTime();
                    timeMS = endTimeMS - startTimeMS;
                    promedios[0] = promedios[0] + bu.getContadorInstrucciones();
                    promedios[1] = promedios[1] + me.getContadorInstrucciones();
                    promedios[2] = promedios[2] + timeBS;
                    promedios[3] = promedios[3] + timeMS;
                    guardarArchivo(new File("src/Archivos/Corrida+" + cont + ".txt"), vec2, "CONJUNTO DE DATOS # " + cont + " CON n= " + w);
                }

                String[] a = new String[7];

                a[0] = mat[cont][1] = String.valueOf(cont);
                a[1] = mat[cont][2] = String.valueOf(w);
                a[2] = mat[cont][3] = String.valueOf(1000);
                a[3] = mat[cont][4] = String.valueOf(promedios[0] / 3);
                a[4] = mat[cont][5] = String.valueOf(promedios[1] / 3);
                a[5] = mat[cont][6] = String.valueOf(promedios[2] / 3);
                a[6] = mat[cont][7] = String.valueOf(promedios[3] / 3);

                System.out.println("Se generaron " + w + " claves");
                System.out.println("Tamaño: " + 1000 + " Número promedio de Instrucciones BS: " + promedios[0] / 3);
                System.out.println("Número promedio de Instrucciones MS: " + promedios[1] / 3);
                System.out.println("Tiempos promedio BS y MS respectivamente: " + promedios[2] / 3 + " " + promedios[3] / 3);
                System.out.println("\n");
                modelo.addRow(a);

                jTable1.setModel(modelo);
                jButton4.setEnabled(true);
                jTextField1.setEditable(true);
                jButton1.setEnabled(true);
                jButton5.setEnabled(true);
                jButton3.setEnabled(true);

            }

            generarExcel.generarExcel(mat, "src/Archivos/Excel.xls");

        } catch (IOException ex) {
            Logger.getLogger(Vistas.class.getName()).log(Level.SEVERE, null, ex);
        } catch (WriteException ex) {
            Logger.getLogger(Vistas.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    public void abrirarchivo(String archivo) {

        try {

            File objetofile = new File(archivo);
            Desktop.getDesktop().open(objetofile);

        } catch (IOException ex) {

            System.out.println(ex);
        }
    }

    public static void generarBarras(int fila) {
        try {
            DefaultCategoryDataset ds = new DefaultCategoryDataset();

            for (int i = 1; i < 31; i++) {
                ds.addValue(Long.parseLong(mat[i][fila]), String.valueOf(i), String.valueOf(i));
            }

            JFreeChart jf = ChartFactory.createBarChart3D("TIEMPO DE CORRIDA BUBBLE SORT", "TIEMPOS ", "VALOR ", ds, PlotOrientation.VERTICAL, true, true, true);
            ChartFrame f = new ChartFrame("GRAFICO DE TIEMPO", jf);
            f.setSize(1000, 600);
            f.setLocationRelativeTo(null);
            f.setVisible(true);

        } catch (Exception e) {
        }
    }


    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:

        if (Integer.parseInt(jTextField1.getText()) > 0 && Integer.parseInt(jTextField1.getText()) < 31) {
            if ("1".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+1.txt");
            }
            if ("2".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+2.txt");
            }
            if ("3".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+3.txt");
            }
            if ("4".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+4.txt");
            }
            if ("5".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+5.txt");
            }
            if ("6".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+6.txt");
            }
            if ("7".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+7.txt");
            }
            if ("8".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+8.txt");
            }
            if ("9".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+9.txt");
            }
            if ("10".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+10.txt");
            }
            if ("11".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+11.txt");
            }
            if ("12".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+12.txt");
            }
            if ("12".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+13.txt");
            }
            if ("14".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+14.txt");
            }
            if ("15".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+15.txt");
            }
            if ("16".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+16.txt");
            }
            if ("17".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+17.txt");
            }
            if ("18".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+18.txt");
            }
            if ("19".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+19.txt");
            }
            if ("20".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+20.txt");
            }
            if ("21".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+21.txt");
            }
            if ("22".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+22.txt");
            }
            if ("23".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+23.txt");
            }
            if ("24".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+24.txt");
            }
            if ("25".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+25.txt");
            }
            if ("26".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+26.txt");
            }
            if ("27".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+27.txt");
            }
            if ("28".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+28.txt");
            }
            if ("29".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+29.txt");
            }
            if ("30".equals(jTextField1.getText())) {
                abrirarchivo("src/Archivos/Corrida+30.txt");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe ingresar un número entre 1 y 30", "ERROR!", 0);
        }
        jTextField1.setText("");

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        abrirarchivo("src/Archivos/Excel.xls");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        generarBarras(6);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        generarBarras(7);
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     *
     * @param archivo Archivo a crear
     * @param vec Vector que contiene la información que será guardada en el
     * archivo.
     * @param text Texto de referencia del archivo.
     * @throws IOException Exception.
     */
    public static void guardarArchivo(File archivo, BigInteger[] vec, String text) throws IOException {
        BufferedWriter bw;

        bw = new BufferedWriter(new FileWriter(archivo));
        if (archivo.exists()) {
            bw.write(text);
            bw.newLine();

        }
        for (int i = 0; i < vec.length; i++) {
            if (archivo.exists()) {
                bw.write(String.valueOf(vec[i]));
                bw.newLine();
            } else {
                bw.write(String.valueOf(vec[i]));
                bw.newLine();
            }
        }
        bw.close();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vistas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vistas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vistas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vistas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vistas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
